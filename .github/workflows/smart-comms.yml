name: Smart Comms

on:
  schedule:
    - cron: '5 8 * * *'
    - cron: '27 10 * * *'
    - cron: '46 13 * * *'
    - cron: '15 16 * * *'
    - cron: '33 19 * * *'
    - cron: '50 22 * * *'
    - cron: '12 23 * * *'
  workflow_dispatch:

jobs:
  commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure Git User
        run: |
          git config --global user.name "barendan"
          git config --global user.email "barendan@gmail.com"

      - name: Choose a Valid File
        run: |
          FILES=(
            "src/components/App.js"
            "src/components/Dashboard/Dashboard.jsx"
            "src/components/Dashboard/displayContact.jsx"
            "src/components/Dashboard/listContacts.jsx"
            "src/utils/helpers.js"
            "src/hooks/useFetch.js"
          )

          # Find non-empty files
          NON_EMPTY_FILES=()
          for file in "${FILES[@]}"; do
            if [ -s "$file" ]; then
              NON_EMPTY_FILES+=("$file")
            fi
          done

          # If all files are empty, exit without committing
          if [ ${#NON_EMPTY_FILES[@]} -eq 0 ]; then
            echo "No valid files found. Skipping commit."
            exit 0
          fi

          CHOSEN_FILE=${NON_EMPTY_FILES[$RANDOM % ${#NON_EMPTY_FILES[@]}]}
          echo "Chosen file: $CHOSEN_FILE"
          echo "CHOSEN_FILE=$CHOSEN_FILE" >> $GITHUB_ENV


      - name: Generate Real-Looking Updates
        run: |
            SNIPPET_FILE="snippets.txt"
  
            if [ ! -f "$SNIPPET_FILE" ]; then
              echo "No snippets file found! Exiting..."
              exit 0
            fi
  
            # Read snippets and randomly select one
            IFS=$'\n' read -d '' -r -a SNIPPETS < <(awk '/===/{print "---"} !/===/' "$SNIPPET_FILE" | awk 'BEGIN{RS="---"} {print}' | shuf -n 1)
  
            CHOSEN_SNIPPET="${SNIPPETS[@]}"
            echo "Selected snippet: $CHOSEN_SNIPPET"
  
            # Insert snippet at a random line in the chosen file
            TOTAL_LINES=$(wc -l < "$CHOSEN_FILE")
            RANDOM_LINE=$((RANDOM % TOTAL_LINES + 1))
  
            sed -i "${RANDOM_LINE}i $CHOSEN_SNIPPET" "$CHOSEN_FILE"
  
            git add "$CHOSEN_FILE"
  
            # Generate a random task number
            TASK_NUMBER="TASK-$((100 + RANDOM % 900))"
  
            # More detailed commit messages
            COMMIT_MESSAGES=(
              "$TASK_NUMBER - Refactored logic for better performance and maintainability."
              "$TASK_NUMBER - Optimized function to reduce execution time and improve efficiency."
              "$TASK_NUMBER - Added missing error handling to enhance system stability."
              "$TASK_NUMBER - Cleaned up redundant code and improved readability."
              "$TASK_NUMBER - Implemented a helper function for reusability across components."
              "$TASK_NUMBER - Fixed minor performance bottleneck affecting large data processing."
              "$TASK_NUMBER - Enhanced logging for better debugging and monitoring."
            )
  
            git commit -m "${COMMIT_MESSAGES[$RANDOM % ${#COMMIT_MESSAGES[@]}]}"
  
            # Random delay between commits (1 to 20 min)
            sleep $((60 + RANDOM % 1200))
  

      - name: Push All Commits at Once
        run: |
          git push
