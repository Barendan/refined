name: Smart Comms

on:
  schedule:
    - cron: '5 8 * * *'
    - cron: '27 10 * * *'
    - cron: '46 13 * * *'
    - cron: '15 16 * * *'
    - cron: '33 19 * * *'
    - cron: '50 22 * * *'
    - cron: '12 23 * * *'
  workflow_dispatch:

jobs:
  commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Choose a Valid File
        run: |
          FILES=(
            "src/components/App.js"
            "src/components/Dashboard/Dashboard.jsx"
            "src/components/Dashboard/displayContact.jsx"
            "src/components/Dashboard/listContacts.jsx"
            "src/utils/helpers.js"
            "src/hooks/useFetch.js"
          )

          # Find non-empty files
          NON_EMPTY_FILES=()
          for file in "${FILES[@]}"; do
            if [ -s "$file" ]; then
              NON_EMPTY_FILES+=("$file")
            fi
          done

          # If all files are empty, exit without committing
          if [ ${#NON_EMPTY_FILES[@]} -eq 0 ]; then
            echo "No valid files found. Skipping commit."
            exit 0
          fi

          CHOSEN_FILE=${NON_EMPTY_FILES[$RANDOM % ${#NON_EMPTY_FILES[@]}]}
          echo "Chosen file: $CHOSEN_FILE"
          echo "CHOSEN_FILE=$CHOSEN_FILE" >> $GITHUB_ENV

      - name: Decide Number of Commits for Today
        run: |
          COMMITS_TODAY=$((3 + RANDOM % 5))  # 3 to 7 commits per run
          echo "COMMITS_TODAY=$COMMITS_TODAY" >> $GITHUB_ENV
          echo "Will make $COMMITS_TODAY commits today."

      - name: Generate Real-Looking Updates
        run: |
          for ((i=1; i<=$COMMITS_TODAY; i++)); do
            FILE_TYPE="${CHOSEN_FILE##*.}"  # Extract file extension
            
            if [[ "$FILE_TYPE" == "js" || "$FILE_TYPE" == "jsx" ]]; then
              echo "// TODO: Improve component performance" >> "$CHOSEN_FILE"
            elif [[ "$FILE_TYPE" == "ts" ]]; then
              echo "// TypeScript optimization needed" >> "$CHOSEN_FILE"
            else
              echo "# Refactored logic for better efficiency" >> "$CHOSEN_FILE"
            fi

            git add "$CHOSEN_FILE"
            COMMIT_MESSAGES=("Refactoring logic" "Improving performance" "Minor tweaks" "Code cleanup" "Enhancing readability")
            git commit -m "${COMMIT_MESSAGES[$RANDOM % ${#COMMIT_MESSAGES[@]}]}"

            sleep $((RANDOM % 900))  # Wait up to 15 min between commits
          done

      - name: Push All Commits at Once
        run: |
          git config --global user.name "barendan"
          git config --global user.email "barendan@gmail.com"
          git push
